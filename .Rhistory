library(rjso)
library(rjson)
mat ='[[0,"L-Seryl-tRNA(Sec)","L-Arginyl-tRNA(Arg)","L-Aspartate","L-Selenocysteinyl-tRNA(Sec)","Selenomethionyl-tRNA(Met)","L-Tyrosyl-tRNA(Tyr)","O-Phosphoseryl-tRNA(Sec)","L-Phenylalanine","L-Phenylalanyl-tRNA(Phe)","L-Cysteinyl-tRNA(Cys)","Selenophosphoric acid","L-Lysine","L-Alanyl-tRNA","L-Selenomethionine","L-Aspartyl-tRNA(Asp)","L-Alanine","L-Methionyl-tRNA","L-Cysteine","L-Methionine","L-Lysyl-tRNA","L-Arginine","L-Tyrosine"],["Amino Acid Metabolism, Inborn Errors",0,0,56,0,0,0,0,62,0,0,0,68,0,0,0,62,0,37,81,0,68,87],["Hepatic Encephalopathy",0,0,56,0,0,0,0,62,0,0,0,0,0,0,0,0,0,0,81,0,68,87],["Renal Aminoacidurias",0,0,0,0,0,0,0,62,0,0,0,68,0,0,0,62,0,0,81,0,68,87],["Metabolism, Inborn Errors",0,0,56,0,0,0,0,62,0,0,0,68,0,0,0,62,0,0,81,0,68,87],["Intellectual Disability",0,0,56,0,0,0,0,62,0,0,0,68,0,0,0,62,0,0,81,0,68,87],["Maple Syrup Urine Disease",0,0,0,0,0,0,0,62,0,0,0,68,0,0,0,62,0,0,81,0,68,87],["Amyotrophic Lateral Sclerosis",0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,62,0,37,0,0,68,87],["Glioblastoma",0,0,56,0,0,0,0,62,0,0,0,0,0,0,0,0,0,0,81,0,0,87],["Cystinuria",0,0,0,0,0,0,0,62,0,0,0,68,0,0,0,62,0,37,81,0,68,87],["Protein Deficiency",0,0,0,0,0,0,0,62,0,0,0,68,0,0,0,62,0,0,81,0,68,87],["Hartnup Disease",0,0,0,0,0,0,0,62,0,0,0,68,0,0,0,62,0,0,81,0,68,87],["Osteogenesis Imperfecta",0,0,56,0,0,0,0,0,0,0,0,68,0,0,0,0,0,37,0,0,68,0],["Creutzfeldt-Jakob Syndrome",0,0,56,0,0,0,0,0,0,0,0,68,0,0,0,0,0,0,81,0,0,0],["Cystinosis",0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,0,0,37,81,0,0,87],["Hemochromatosis",0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,87],["Amyloid Neuropathies, Familial",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,0,0,81,0,0,87]]'
test = from JSON(,at)
test = from JSON(mat)
test = fromJSON(mat)
m = do.call(rbind, test)
m
data = data.frame(m[2:nrow(m), 2:ncol(m)], row.names=m[2:nrow(m),1],stringsAsFactors=F)"
)
""
data = data.frame(m[2:nrow(m), 2:ncol(m)], row.names=m[2:nrow(m),1],stringsAsFactors=F)
colnames(data) = m[1,2:ncol(m)]
hmcols<-colorRampPalette(c(""white","yellow","red"))(256)
hmcols<-colorRampPalette(c("white","yellow","red"))(256)
test2 =heatmap(data.matrix(data),col=hmcol)
test2 =heatmap(data.matrix(data),col=hmcols)
library(rjson)
mat = '[[0,"L-Seryl-tRNA(Sec)","L-Arginyl-tRNA(Arg)","L-Aspartate","L-Selenocysteinyl-tRNA(Sec)","Selenomethionyl-tRNA(Met)","L-Tyrosyl-tRNA(Tyr)","O-Phosphoseryl-tRNA(Sec)","L-Phenylalanine","L-Phenylalanyl-tRNA(Phe)","L-Cysteinyl-tRNA(Cys)","Selenophosphoric acid","L-Lysine","L-Alanyl-tRNA","L-Selenomethionine","L-Aspartyl-tRNA(Asp)","L-Alanine","L-Methionyl-tRNA","L-Cysteine","L-Methionine","L-Lysyl-tRNA","L-Arginine","L-Tyrosine"],["Amino Acid Metabolism, Inborn Errors",0,0,56,0,0,0,0,62,0,0,0,68,0,0,0,62,0,37,81,0,68,87],["Hepatic Encephalopathy",0,0,56,0,0,0,0,62,0,0,0,0,0,0,0,0,0,0,81,0,68,87],["Renal Aminoacidurias",0,0,0,0,0,0,0,62,0,0,0,68,0,0,0,62,0,0,81,0,68,87],["Metabolism, Inborn Errors",0,0,56,0,0,0,0,62,0,0,0,68,0,0,0,62,0,0,81,0,68,87],["Intellectual Disability",0,0,56,0,0,0,0,62,0,0,0,68,0,0,0,62,0,0,81,0,68,87],["Maple Syrup Urine Disease",0,0,0,0,0,0,0,62,0,0,0,68,0,0,0,62,0,0,81,0,68,87],["Amyotrophic Lateral Sclerosis",0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,62,0,37,0,0,68,87],["Glioblastoma",0,0,56,0,0,0,0,62,0,0,0,0,0,0,0,0,0,0,81,0,0,87],["Cystinuria",0,0,0,0,0,0,0,62,0,0,0,68,0,0,0,62,0,37,81,0,68,87],["Protein Deficiency",0,0,0,0,0,0,0,62,0,0,0,68,0,0,0,62,0,0,81,0,68,87],["Hartnup Disease",0,0,0,0,0,0,0,62,0,0,0,68,0,0,0,62,0,0,81,0,68,87],["Osteogenesis Imperfecta",0,0,56,0,0,0,0,0,0,0,0,68,0,0,0,0,0,37,0,0,68,0],["Creutzfeldt-Jakob Syndrome",0,0,56,0,0,0,0,0,0,0,0,68,0,0,0,0,0,0,81,0,0,0],["Cystinosis",0,0,0,0,0,0,0,0,0,0,0,68,0,0,0,0,0,37,81,0,0,87],["Hemochromatosis",0,0,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,0,0,87],["Amyloid Neuropathies, Familial",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,0,0,81,0,0,87]]'
test = fromJSON(mat)
m = do.call(rbind, test)
data = data.frame(m[2:nrow(m), 2:ncol(m)], row.names=m[2:nrow(m),1],stringsAsFactors=F)
colnames(data) = m[1,2:ncol(m)]
hmcols<-colorRampPalette(c("white","yellow","red"))(256)
test2 =heatmap(data.matrix(data),col=hmcols)
library(rjson)
mat = '[[0,"3-Oxotetradecanoyl-CoA","Tetradecanoyl-CoA","3-Oxooctanoyl-CoA","3-Oxohexanoyl-CoA","Decanoyl-CoA","3-Oxododecanoyl-CoA","Octanoyl-CoA","3-Oxodecanoyl-CoA","Hexanoyl-CoA","3-Oxopalmitoyl-CoA","Lauroyl-CoA","Propanoyl-CoA","Acetyl-CoA","2-Methylacetoacetyl-CoA","Butanoyl-CoA"],["Lauroyl-CoA",0,75,0,0,75,75,75,75,75,75,75,0,0,0,0],["Acetyl-CoA",0,0,75,75,0,0,0,0,0,0,0,25,75,25,75],["Fatty acid elongation in mitochondria",50,75,75,75,75,75,75,75,75,75,75,0,75,0,75],["Fatty acid metabolism",50,75,75,75,75,75,75,75,75,75,75,0,75,0,75]]'
test = fromJSON(mat)
m = do.call(rbind, test)
data = data.frame(m[2:nrow(m), 2:ncol(m)], row.names=m[2:nrow(m),1],stringsAsFactors=F)
colnames(data) = m[1,2:ncol(m)]
hmcols<-colorRampPalette(c("white","yellow","red"))(256)
test2 =heatmap(data.matrix(data),col=hmcols)
q90
q()
myCol <- c("blue", "green", "yellow", "orange", "red")
library(rjson)
mat = '[[0,"dTTP","dCTP","DNA","dGTP","dATP"],["Nucleoside-diphosphate kinase",100,100,0,100,100],["DNA-directed DNA polymerase",100,100,66,100,100],["Nucleotidyltransferases.",100,100,66,100,100]]'
test = fromJSON(mat)
m = do.call(rbind, test)
data = data.frame(m[2:nrow(m), 2:ncol(m)], row.names=m[2:nrow(m),1],stringsAsFactors=F)
colnames(data) = m[1,2:ncol(m)]
hmcols<-colorRampPalette(c("white","yellow","red"))(256)
myCol <- c("blue", "green", "yellow", "orange", "red")
myBreaks <- c(10, 20, 40, 60, 80, 100)
test2 =heatmap(t(data.matrix(data)),col = myCol , breaks = myBreaks)
library(rjson)
mat = '[[0,"dTTP","dCTP","DNA","dGTP","dATP"],["Nucleoside-diphosphate kinase",100,100,0,100,100],["DNA-directed DNA polymerase",100,100,66,100,100],["Nucleotidyltransferases.",100,100,66,100,100]]'
test = fromJSON(mat)
m = do.call(rbind, test)
data = data.frame(m[2:nrow(m), 2:ncol(m)], row.names=m[2:nrow(m),1],stringsAsFactors=F)
colnames(data) = m[1,2:ncol(m)]
## The colors you specified.
myCol <- c("blue", "green", "yellow", "orange", "red","black")
## Defining breaks for the color scale
myBreaks <- c(0, 10, 20, 40, 60, 80, 100)
test2 =heatmap(t(data.matrix(data)),col = myCol , breaks = myBreaks)
test2 =heatmap(data.matrix(data),col = myCol , breaks = myBreaks)
test2 =heatmap(data.matrix(data),col = myCol , breaks = myBreaks)
test2 =heatmap(t(data.matrix(data)),col = myCol , breaks = myBreaks)
test2 =heatmap(t(data.matrix(data)),col = myCol , breaks = myBreaks)
test2 =heatmap(data.matrix(data),col = myCol , breaks = myBreaks)
test2 =heatmap(t(data.matrix(data)),col = myCol , breaks = myBreaks)
test2 =heatmap(data.matrix(data),col = myCol , breaks = myBreaks)
q90
q()
te =[[0,"L-Arabinose","D-Xylulose 5-phosphate","Pyruvate","L-Idonate","D-Glucuronate","D-Glucarate","2-Oxoglutarate","D-Glucuronolactone","L-Gulono-1,4-lactone","GDP-mannose","2,5-Dioxopentanoate","UDP-glucose","UDP-glucuronate"],["carbohydrate metabolic process",14,42,85,0,85,71,100,71,0,57,71,85,14],["cell communication",0,0,85,42,85,71,100,71,42,57,71,85,0],["signaling",0,0,85,42,85,71,100,71,42,57,71,85,0],["single organism signaling",0,0,85,42,85,71,100,71,42,57,71,85,0],["phytol metabolic process",0,0,0,0,0,71,100,71,0,0,71,0,0],["carbohydrate catabolic process",0,42,85,0,85,0,100,0,0,0,0,85,0],["single-organism carbohydrate catabolic process",0,42,85,0,85,0,100,0,0,0,0,85,0]]
library('rjson')
library('gplots')
te ='[[0,"L-Arabinose","D-Xylulose 5-phosphate","Pyruvate","L-Idonate","D-Glucuronate","D-Glucarate","2-Oxoglutarate","D-Glucuronolactone","L-Gulono-1,4-lactone","GDP-mannose","2,5-Dioxopentanoate","UDP-glucose","UDP-glucuronate"],["carbohydrate metabolic process",14,42,85,0,85,71,100,71,0,57,71,85,14],["cell communication",0,0,85,42,85,71,100,71,42,57,71,85,0],["signaling",0,0,85,42,85,71,100,71,42,57,71,85,0],["single organism signaling",0,0,85,42,85,71,100,71,42,57,71,85,0],["phytol metabolic process",0,0,0,0,0,71,100,71,0,0,71,0,0],["carbohydrate catabolic process",0,42,85,0,85,0,100,0,0,0,0,85,0],["single-organism carbohydrate catabolic process",0,42,85,0,85,0,100,0,0,0,0,85,0]]'
ma=te
mat=te
mat
test <- fromJSON (mat)
test
m = do.call(rbind, test)
m
data = data.frame(m[2:nrow(m), 2:ncol(m)], row.names=m[2:nrow(m),1],stringsAsFactors=F)
data
colnames(data) = m[1,2:ncol(m)]
data
library(gplots)
json_file <- "8380e713-19dc-491c-a972-7201d9cceda8.txt"
m=read.csv(json_file, header=T)
data = data.frame(m[2:nrow(m), 2:ncol(m)], row.names=m[2:nrow(m),1],stringsAsFactors=F,check.names = FALSE)
colnames(data) = m[1,2:ncol(m)]
data=0
colname=0
q()
library(gplots)
json_file <- "/tmp/4bf4748b-5a12-4b62-851e-acb60d6534ff.txt"
m=read.csv(json_file, header=T)
data=data.frame(m[1:nrow(m)-1, 2:ncol(m)], row.names=m[1:nrow(m)-1,1],stringsAsFactors=F)
myCol <- c("white","#ffffcc","#ffff99","#ffff66","#ffff33","#FFFF00","#FFCC00","#ff9900","#ff6600","#FF3300","red" )
myBreaks <- c(0,1, 10, 20,30,40,50,60,70,80,90,100)
hclust.ave <- function(x) hclust(x, method='average')
pdf('/tmp/tt.pdf')
test2 =heatmap.2((data.matrix(data)),hclustfun=hclust.ave,trace='none' )
dev.off()
library(gplots)
json_file <- "/tmp/cbefcd86-7a6c-4c42-9b76-281cbe41d0e9.txt"
m=read.csv(json_file, header=T)
data=data.frame(m[1:nrow(m)-1, 2:ncol(m)], row.names=m[1:nrow(m)-1,1],stringsAsFactors=F)
myCol <- c("white","#ffffcc","#ffff99","#ffff66","#ffff33","#FFFF00","#FFCC00","#ff9900","#ff6600","#FF3300","red" )
myBreaks <- c(0,1, 10, 20,30,40,50,60,70,80,90,100)
hclust.ave <- function(x) hclust(x, method='average')
test2 =heatmap.2((data.matrix(data)),hclustfun=hclust.ave,trace='none' )
library(gplots)
json_file <- "/tmp/cbefcd86-7a6c-4c42-9b76-281cbe41d0e9.txt"
m=read.csv(json_file, header=T)
data=data.frame(m[1:nrow(m)-1, 2:ncol(m)], row.names=m[1:nrow(m)-1,1],stringsAsFactors=F)
myCol <- c("white","#ffffcc","#ffff99","#ffff66","#ffff33","#FFFF00","#FFCC00","#ff9900","#ff6600","#FF3300","red" )
myBreaks <- c(0,1, 10, 20,30,40,50,60,70,80,90,100)
hclust.ave <- function(x) hclust(x, method='average')
test2 =heatmap.2((data.matrix(data)),hclustfun=hclust.ave,col = myCol , breaks = myBreaks,trace="none",key = FALSE, labCol="",labRow=""  )
test2 =heatmap.2((data.matrix(data)),hclustfun=hclust.ave,col = myCol , breaks = myBreaks,trace="none",key = FALSE, labCol="",labRow="" ,dendrogram="none" )
test2 =heatmap.2((data.matrix(data)),hclustfun=hclust.ave,col = myCol , breaks = myBreaks,trace="none" ,dendrogram="none" )
library(gplots)
json_file <- "/tmp/a1797280-056a-414d-a0c8-fbf75f22e3dc..txt"
m=read.csv(json_file, header=T)
data=data.frame(m[1:nrow(m)-1, 2:ncol(m)], row.names=m[1:nrow(m)-1,1],stringsAsFactors=F)
myCol <- c("white","#ffffcc","#ffff99","#ffff66","#ffff33","#FFFF00","#FFCC00","#ff9900","#ff6600","#FF3300","red" )
myBreaks <- c(0,1, 10, 20,30,40,50,60,70,80,90,100)
hclust.ave <- function(x) hclust(x, method='average')
test2 =heatmap.2((data.matrix(data)),hclustfun=hclust.ave,col = myCol , breaks = myBreaks,trace="none" )
library(gplots)
json_file <- "/tmp/a1797280-056a-414d-a0c8-fbf75f22e3dc..txt"
m=read.csv(json_file, header=T)
data=data.frame(m[1:nrow(m)-1, 2:ncol(m)], row.names=m[1:nrow(m)-1,1],stringsAsFactors=F)
myCol <- c("white","#ffffcc","#ffff99","#ffff66","#ffff33","#FFFF00","#FFCC00","#ff9900","#ff6600","#FF3300","red" )
myBreaks <- c(0,1, 10, 20,30,40,50,60,70,80,90,100)
hclust.ave <- function(x) hclust(x, method='average')
test2 =heatmap.2((data.matrix(data)),hclustfun=hclust.ave,col = myCol , breaks = myBreaks,trace="none" )
library(gplots)
json_file <- "/tmp/a1797280-056a-414d-a0c8-fbf75f22e3dc.txt"
m=read.csv(json_file, header=T)
data=data.frame(m[1:nrow(m)-1, 2:ncol(m)], row.names=m[1:nrow(m)-1,1],stringsAsFactors=F)
myCol <- c("white","#ffffcc","#ffff99","#ffff66","#ffff33","#FFFF00","#FFCC00","#ff9900","#ff6600","#FF3300","red" )
myBreaks <- c(0,1, 10, 20,30,40,50,60,70,80,90,100)
hclust.ave <- function(x) hclust(x, method='average')
test2 =heatmap.2((data.matrix(data)),hclustfun=hclust.ave,col = myCol , breaks = myBreaks,trace="none" )
test2 =heatmap.2((data.matrix(data)),hclustfun=hclust.ave,col = myCol , breaks = myBreaks,trace="none" )
data
length(rownames(data)
)
length(colnames(data))
width<-length(colnames(data))
width
height<-length(rownames(data)
)
png(filename ='/tmp/test2.png',bg = '#F7F8E0',width = width, height = height)
width<-length(colnames(data))
print width
width
library(gplots)
json_file <- "/tmp/a8dbd7fd-a6d3-404f-97dc-f8b307f2abc7.txt"
m=read.csv(json_file, header=T)
data=data.frame(m[1:nrow(m)-1, 2:ncol(m)], row.names=m[1:nrow(m)-1,1],stringsAsFactors=F)
myCol <- c("white","#ffffcc","#ffff99","#ffff66","#ffff33","#FFFF00","#FFCC00","#ff9900","#ff6600","#FF3300","red" )
myBreaks <- c(0,1, 10, 20,30,40,50,60,70,80,90,100)
hclust.ave <- function(x) hclust(x, method='average')
test2 =heatmap.2((data.matrix(data)),hclustfun=hclust.ave,col = myCol , breaks = myBreaks,trace="none" )
test2 =heatmap.2((data.matrix(data)),hclustfun=hclust.ave,col = myCol , breaks = myBreaks,trace="none" )
library(gplots)
json_file <- "/tmp/5942b8d6-1802-443f-8b92-ff9f1754905f.txt"
m=read.csv(json_file, header=T)
data=data.frame(m[1:nrow(m)-1, 2:ncol(m)], row.names=m[1:nrow(m)-1,1],stringsAsFactors=F)
myCol <- c("white","#ffffcc","#ffff99","#ffff66","#ffff33","#FFFF00","#FFCC00","#ff9900","#ff6600","#FF3300","red" )
myBreaks <- c(0,1, 10, 20,30,40,50,60,70,80,90,100)
hclust.ave <- function(x) hclust(x, method='average')
test2 =heatmap.2((data.matrix(data)),hclustfun=hclust.ave,col = myCol , breaks = myBreaks,trace="none" )
capabilities()
q()
