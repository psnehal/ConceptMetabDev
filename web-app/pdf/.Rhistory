library(Rserve)
Rserve()
q()
library(Rserve)
Rserve()
q()
library()
library(chipenrich)
news(package="chipenrich")
remove.packages(chipenrich, "/home/snehal/R_15/library")
remove.packages(c("chipenrich"), "/home/snehal/R_15/library")
q()
q()
q()
library(chipenrich)
library(Rserve)
Rserve()
q()
exit
q()
install.packages("Rserve")
library(Rserve)
Rserve()
q()
a = c(358, 360, 363, 362, 361, 359)
glucen = c(198760, 198759, 198763, 198761, 198764, 198758, 198762)
maltose= c(219320, 219317, 219316, 219315, 219321, 219318, 219319)
maltose_netab = c(359, 358, 360, 363, 362, 361)
diaphragm=c(3813, 3810, 3809, 3811, 3812, 3808)
test = c(358, 367,1003,1005,1008)
test3 = c(356,360,363,456,458)
test4=c(123,345,361,362,8900)
a=sort(a)
glucen = sort(glucen)
maltose= sort(maltose)
diaphragm=sort(diaphragm)
maltose_netab=sort(maltose_netab)
enriched_concepts = list(glucen,maltose,maltose_netab,diaphragm,test,test3,test4)
rownames(membership) =c('glucen','maltose'ver1,'maltose_netab','diaphragm','test','test3','test4')
rownames(membership) =c('glucen','maltose','maltose_netab','diaphragm','test','test3','test4')
rownames(membership) =c('glucen','maltose'ver1,'maltose_netab','diaphragm','test','test3','test4')
rownames(membership) =c('glucen','maltose','maltose_netab','diaphragm','test','test3','test4')
membership = t(sapply(enriched_concepts, function(enriched_concept){ as.numeric(a %in% enriched_concept) }))
rownames(membership) =c('glucen','maltose','maltose_netab','diaphragm','test','test3','test4')
enriched_concepts = list(glucen,maltose,maltose_netab,diaphragm,test,test3,test4)
m_matrix <- data.matrix(membership)
nba_heatmap <- heatmap(m_matrix, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column")
nba_heatmap <- heatmap(m_matrix, Rowv=NA, Colv=NA, col = cm.colors(256))
m_matrix
expand.grid(rownames(m_matrix), colnames(m_matrix))
expand.grid(rownames(m_matrix), colnames(m_matrix))
aa <- data.frame(r=as.vector(row(m)), c=as.vector(col(m)), v=as.vector(m))
aa <- data.frame(r=as.vector(row(m_matrix)), c=as.vector(col(m_matrix)), v=as.vector(m_matrix))
aa
m_matrix
aa <- data.frame(r=as.vector(row(m_matrix)), c=as.vector(col(m_matrix)), v=as.vector(m_matrix))
type_of(aa)
typeof(aa)
getwd()
setwd("/home/snehal/ConceptMetabGG/conceptmetabVersion/v4/conceptmetab/web-app/pdf")
q()
a =c(584, 1098, 3307, 3508, 3534) #for 10
no_col <- max(count.fields("10_qval100.csv", sep = ","))
data = read.table("10_qval100.csv",sep=",",fill=TRUE,col.names=1:no_col)
enriched.concepts <- as.list(as.data.frame(t(data)))
membership = t(sapply(enriched.concepts, function(enriched.concepts){ as.numeric(a %in% enriched.concepts) }))
colnames(membership) = a
rownames(membership) = data[,1]
m_matrix <- data.matrix(membership)
hclust(m_matrix, method = "complete", members = NULL)
m_matrix
hc <- hclust(m_matrix,"average");
# Let's say a is the concept of interest and it has 20 compounds
a = sort(sample(1:100, 20, replace=F))
# Let's say b, c, d, e, f are concepts which are enriched with a
# and they each have 20 compounds of their own.
b = sort(sample(1:100, 20, replace=F))
c = sort(sample(1:100, 20, replace=F))
d = sort(sample(1:100, 20, replace=F))
e = sort(sample(1:100, 20, replace=F))
f = sort(sample(1:100, 20, replace=F))
# Collect all the enriched concepts in a list
enriched_concepts = list(b, c, d, e, f)
# Use sapply to loop through the enriched concepts and for each one
# see which elements of a are in the enriched_concept.
# The reason I wrapped it in t() is because I personally want
# the rows to be the enriched concepts and the columns to be the 
# compounds from the concept of interest. Though I suppose that doesn't
# have to be the case.
membership = t(sapply(enriched_concepts, function(enriched_concept){ as.numeric(a %in% enriched_concept) }))
colnames(membership) = a
rownames(membership) = c('b','c','d','e','f')
m_matrix <- data.matrix(membership)
nba_heatmap <- heatmap(m_matrix, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column")
hc <- hclust(m_matrix,"average");
m_matrix
nba_heatmap <- heatmap(m_matrix, Rowv=NA, Colv=NA, col = cm.colors(256))
nba_heatmap <- heatmap(m_matrix, Rowv=NA, Colv=NA, hclustfun = hclust,col = cm.colors(256))
nba_heatmap <- heatmap(m_matrix, Rowv=NA, Colv=NA, col = cm.colors(256))
nba_heatmap <- heatmap(m_matrix, Rowv=NA, Colv=NA, hclustfun = hclust,col = cm.colors(256))
q()
